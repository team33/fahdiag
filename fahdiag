#!/bin/bash
#
# fahdiag 0.14
# Folding@Home diagnostics
# 

usage()
{
	echo Usage:
	echo -e \\t$0 [\<directory\>]
	echo -e \\t$0 -V
	echo -e \\t$0 -h
}

export PATH=/sbin:/usr/sbin:$PATH

OPT_FAHDIR=
OPT_VERSION=
OPT_USAGE=

while [ -n "$1" ]; do
	case $1 in
		(-V)
			OPT_VERSION=1
			shift
			;;
		(-h)
			OPT_USAGE=1
			shift
			;;
		(-*)
			echo ERROR: invalid option -- $1
			exit 1
			;;
		(*)
			break
			;;
	esac
done

while [ -n "$1" ]; do
	if [ -n "$OPT_FAHDIR" ]; then
		echo ERROR: excess argument -- $1
		exit 1
	fi
	OPT_FAHDIR=$1
	shift
done

if [ -n "$OPT_VERSION$OPT_USAGE" -a \( "$OPT_VERSION$OPT_USAGE" != "1" -o -n "$OPT_FAHDIR" \) ]; then
	echo ERROR: conflicting arguments
	exit 1
fi

[ -n "$OPT_USAGE" ] && usage && exit 0

echo fahdiag 0.14

[ -n "$OPT_VERSION" ] && exit 0

echo Brought to you by The \[H\]orde
echo Copyright \(c\) 2013 
echo Dave Corfman \<davecorfman@gmail.com\>
echo Kris Rusocki \<kszysiu@gmail.com\>
echo

FAHDIR=$OPT_FAHDIR

test_dir()
{
	[ -z "$1" ] && return 1
	[ -d "$1" ] || return 2
	[ -f "$1/fah6" ] || return 3
	[ -x "$1/fah6" ] || return 4
	FAHDIR=$1
	return 0
}

[ -z "$1" ] || FAHDIR=$1

if [ -z "$FAHDIR" ]; then
	echo Detecting FAH directory.
	test_dir ~/fah || test_dir /var/lib/origami/foldingathome/CPU1
	if [ -z "$FAHDIR" ]; then
		echo ERROR: couldn\'t detect FAH directory
		exit 1
	fi
fi

echo Using $FAHDIR
echo

echo Date: $(date)
echo Hostname: $(hostname)
echo IP: $(ip route get 8.8.8.8 | sed -ne '{s/^.*src.//;p;q}' | awk -F "." '{ if ($1 == 10 || $1 == 172 && $2 >= 16 && $2 <= 31 || $1 == 192 && $2 == 168) { print } else { print "xx.xx.xx." $4 } }')
echo Kernel: $(uname -rv)
echo Uptime: $(uptime | sed -r 's/^.*up (.*),[^,]*user.*$/\1/')
echo

echo Client running:
for i in $(pidof fah6) ; do
	echo "$(ps -p $i -wwouser=,pid=,pcpu=,pmem=,vsz=,rss=,tty=,stat=,start_time=,bsdtime=,cmd=)    [cwd:$(ls -l /proc/$i/cwd | sed 's/.*->.//')]"
done
echo

echo client.cfg:
egrep '^username=|^team=|^extra_parms=' $FAHDIR/client.cfg 2> /dev/null
echo

echo tmpfs:
grep -v ^\# /etc/fstab | grep $FAHDIR
df -hT $FAHDIR 2> /dev/null | tail -n +2
ls -ld $FAHDIR 2> /dev/null
echo

echo Crontab entry:
crontab -l | grep fahbackup
echo

echo Backup data:
echo current
ls -lh ~/fahbackup-data/current/ 2> /dev/null
echo previous
ls -lh ~/fahbackup-data/previous/ 2> /dev/null
echo

echo fahbackup -- SysV initscripts:
ls -l /etc/rc*.d/*fahbackup-rc /etc/init.d/fahbackup-rc 2> /dev/null
echo

echo Kraken version:
thekraken -V 2>&1 | head -1
ls -l $(which thekraken)
echo

echo Kraken wrap:
ls -l $FAHDIR/*FahCore* 2> /dev/null
echo

echo Kraken running:
ps -Leopid=,tid=,pcpu=,psr=,comm= | awk '/[F]ahCo/ { if ($3 > 10) print }'
echo

echo Langouste version:
langouste3 -V 2> /dev/null | sed -r 's/(Langouste3 )([0-9\.]+)[^0-9\.].*$/\2/'
echo

echo Langouste running:
ps auxw | grep [^]]langouste3
echo

echo Langouste -- client.cfg:
egrep '^host=|^port=|^active=' $FAHDIR/client.cfg 2> /dev/null
echo

echo Langouste script version:
md5sum $FAHDIR/langouste-helper.sh 2> /dev/null
echo
echo Langouste script permission:
ls -l $FAHDIR/langouste-helper.sh 2> /dev/null
echo

echo Langouste -- SysV initscripts:
ls -l /etc/rc*.d/*langouste3 /etc/init.d/langouste3 2> /dev/null
echo

echo Langouste -- configuration file:
cat /etc/langouste3/langouste3.conf | grep -Ev '^[[:space:]]*$|^[[:space:]]*#'
echo

echo NUMA -- memory:
grep Mem[FT] /sys/devices/system/node/node[0-9]*/meminfo
echo

GOVERNOR=$(cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_governor 2> /dev/null)
[ -z "$GOVERNOR" ] && GOVERNOR="scaling disabled"
echo Scaling governor: $GOVERNOR
echo

echo top 5 CPU consumers:
ps -eopid=,pcpu=,psr=,comm=  | sort -nrk2,2 | head -5
echo

echo top 5 memory consumers:
ps -eopid=,rss=,comm=  | sort -nrk2,2 | head -5
echo

echo vmstat \(this will take 10 seconds\):
vmstat | head -2
vmstat 5 3 | tail -2
echo

echo rc.local:
grep -Ev '^[[:space:]]*#|^[[:space:]]*$' /etc/rc.local
echo

FILELIST=$(ls -rt /var/log/{messages,syslog}* 2> /dev/null)
echo Last 20 hardware health syslog messages:
if [ -z "$FILELIST" ]; then
	echo WARNING: no files found!
else
	zgrep -Ei 'mcelog|machine.check|hardware.error|detected.stall|lockup|oops:|edac|t=.*jiffies' $FILELIST 2>&1 | grep -Eiv 'giving.out|seeking.for|driver.loaded|edac.mc..ver|modules.linked.in' | tail -20
fi
echo

echo Last 20 FahCore crash messages:
if [ -z "$FILELIST" ]; then
	echo WARNING: no files found!
else
	zgrep -EiA2 'fahco.*unexpected.fatal.signal' $FILELIST 2>&1 | grep -Ev ':--|][[:space:]]*$' | tail -20
fi
echo

echo [H] environment:
fahinstall -V
fahbackup -V
fahrestore -V
hfminstall -V
fahdiag -V
